{"ast":null,"code":"export default {\n  data() {\n    return {\n      avatar: [],\n      form: {},\n      user: uni.getStorageSync('xm-user'),\n      //获取浏览器仓库的信息\n      imageStyles: {\n        //头像框的样式\n        \"height\": 80,\n        // 边框高度\n        \"width\": 80,\n        // 边框宽度\n        \"border\": {\n          // 如果为 Boolean 值，可以控制边框显示与否\n          \"color\": \"#eee\",\n          // 边框颜色\n          \"width\": \"1px\",\n          // 边框宽度\n          \"style\": \"solid\",\n          // 边框样式\n          \"radius\": \"50%\" // 边框圆角，支持百分比\n        }\n      },\n\n      range: [{\n        text: '男',\n        value: '男'\n      }, {\n        text: '女',\n        value: '女'\n      }]\n    };\n  },\n  onLoad() {\n    this.form = JSON.parse(JSON.stringify(this.user)); //把user信息拷贝到form里面\n    this.avatar = [{\n      //从数组里面取出这个对象，在从对象里面取出这个url，\n      url: this.user.avatar\n    }];\n  },\n  methods: {\n    save() {\n      console.log(this.form, '1111');\n      this.$request.put('/user/update', this.form).then(res => {\n        if (res.code === '200') {\n          uni.showToast({\n            icon: \"success\",\n            title: '操作成功'\n          });\n          uni.setStorageSync('xm-user', this.form); // 更新浏览器缓存的用户信息\n\n          // 延迟跳转，等待 Toast 显示完成\n          setTimeout(() => {\n            uni.switchTab({\n              url: '/pages/me/me'\n            });\n          }, 1500);\n        } else {\n          uni.showToast({\n            icon: \"error\",\n            title: res.msg\n          });\n        }\n      });\n    },\n    handleAvatarUploadSuccess(e) {\n      //返回上传图片的地址\n      let _this = this;\n      const filePath = e.tempFilePaths[0];\n      uni.uploadFile({\n        url: _this.$baseUrl + '/files/upload',\n        //自己的后端接口（默认发送post请求）\n        filePath: filePath,\n        name: \"file\",\n        //这里应为自己后端文件形参的名字\n        success(res) {\n          //获取头像的信息\n          console.log(res);\n          let url = JSON.parse(res.data || '{}').data;\n          _this.form.avatar = url;\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["data","avatar","form","user","uni","getStorageSync","imageStyles","range","text","value","onLoad","JSON","parse","stringify","url","methods","save","console","log","$request","put","then","res","code","showToast","icon","title","setStorageSync","setTimeout","switchTab","msg","handleAvatarUploadSuccess","e","_this","filePath","tempFilePaths","uploadFile","$baseUrl","name","success"],"sources":["src/views/front/Person.vue"],"sourcesContent":["<template>\r\n  <view style=\"padding: 20rpx;\">\r\n    <view class=\"box\">\r\n      <uni-forms :modelValue=\"form\" :rules=\"rules\" ref=\"formRef\" label-width=\"140rpx\" label-align=\"right\">\r\n        <uni-forms-item label=\"头像\" name=\"avatar\">\r\n          <uni-file-picker limit=\"1\" :image-styles=\"imageStyles\" :del-icon=\"false\" :disable-preview=\"true\"\r\n                           fileMediatype=\"image\" v-model=\"avatar\" @select=\"handleAvatarUploadSuccess\"></uni-file-picker>\r\n        </uni-forms-item>\r\n        <uni-forms-item label=\"账号\" name=\"username\">\r\n          <uni-easyinput type=\"text\" v-model=\"form.username\" placeholder=\"\" disabled />\r\n        </uni-forms-item>\r\n        <uni-forms-item label=\"姓名\" name=\"name\">\r\n          <uni-easyinput type=\"text\" v-model=\"form.name\" placeholder=\"请输入姓名\" />\r\n        </uni-forms-item>\r\n        <uni-forms-item label=\"性别\" name=\"sex\">\r\n          <uni-data-checkbox style=\"position: relative; top: 10rpx;\" v-model=\"form.sex\" :localdata=\"range\"></uni-data-checkbox>\r\n        </uni-forms-item>\r\n        <uni-forms-item label=\"电话\" name=\"phone\">\r\n          <uni-easyinput type=\"text\" v-model=\"form.phone\" placeholder=\"请输入电话\" />\r\n        </uni-forms-item>\r\n\r\n        <uni-forms-item>\r\n          <button type=\"primary\" size=\"mini\" @click=\"save\">保 存</button>\r\n        </uni-forms-item>\r\n      </uni-forms>\r\n    </view>\r\n  </view>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      avatar: [],\r\n      form: {},\r\n      user: uni.getStorageSync('xm-user'),//获取浏览器仓库的信息\r\n      imageStyles: {//头像框的样式\r\n        \"height\": 80, // 边框高度\r\n        \"width\": 80, // 边框宽度\r\n        \"border\": { // 如果为 Boolean 值，可以控制边框显示与否\r\n          \"color\": \"#eee\", // 边框颜色\r\n          \"width\": \"1px\", // 边框宽度\r\n          \"style\": \"solid\", // 边框样式\r\n          \"radius\": \"50%\" // 边框圆角，支持百分比\r\n        }\r\n      },\r\n      range: [\r\n        { text: '男', value: '男' },\r\n        { text: '女', value: '女' },\r\n      ]\r\n    }\r\n  },\r\n  onLoad() {\r\n    this.form = JSON.parse(JSON.stringify(this.user))//把user信息拷贝到form里面\r\n    this.avatar = [{//从数组里面取出这个对象，在从对象里面取出这个url，\r\n      url: this.user.avatar\r\n    }]\r\n  },\r\n  methods: {\r\n    save() {\r\n      console.log(this.form,'1111')\r\n      this.$request.put('/user/update', this.form).then(res => {\r\n        if (res.code === '200') {\r\n          uni.showToast({\r\n            icon: \"success\",\r\n            title: '操作成功'\r\n          })\r\n          uni.setStorageSync('xm-user', this.form)  // 更新浏览器缓存的用户信息\r\n\r\n          // 延迟跳转，等待 Toast 显示完成\r\n          setTimeout(() => {\r\n            uni.switchTab({\r\n              url: '/pages/me/me'\r\n            })\r\n          }, 1500)\r\n\r\n        } else {\r\n          uni.showToast({\r\n            icon: \"error\",\r\n            title: res.msg\r\n          })\r\n        }\r\n      })\r\n    },\r\n    handleAvatarUploadSuccess(e) {//返回上传图片的地址\r\n      let _this = this\r\n      const filePath = e.tempFilePaths[0]\r\n      uni.uploadFile({\r\n        url: _this.$baseUrl + '/files/upload', //自己的后端接口（默认发送post请求）\r\n        filePath: filePath,\r\n        name: \"file\", //这里应为自己后端文件形参的名字\r\n        success(res) {//获取头像的信息\r\n          console.log(res)\r\n          let url = JSON.parse(res.data || '{}').data\r\n          _this.form.avatar = url\r\n        }\r\n      })\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"],"mappings":"AA8BA;EACAA,KAAA;IACA;MACAC,MAAA;MACAC,IAAA;MACAC,IAAA,EAAAC,GAAA,CAAAC,cAAA;MAAA;MACAC,WAAA;QAAA;QACA;QAAA;QACA;QAAA;QACA;UAAA;UACA;UAAA;UACA;UAAA;UACA;UAAA;UACA;QACA;MACA;;MACAC,KAAA,GACA;QAAAC,IAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,KAAA;MAAA;IAEA;EACA;EACAC,OAAA;IACA,KAAAR,IAAA,GAAAS,IAAA,CAAAC,KAAA,CAAAD,IAAA,CAAAE,SAAA,MAAAV,IAAA;IACA,KAAAF,MAAA;MAAA;MACAa,GAAA,OAAAX,IAAA,CAAAF;IACA;EACA;EACAc,OAAA;IACAC,KAAA;MACAC,OAAA,CAAAC,GAAA,MAAAhB,IAAA;MACA,KAAAiB,QAAA,CAAAC,GAAA,sBAAAlB,IAAA,EAAAmB,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACAnB,GAAA,CAAAoB,SAAA;YACAC,IAAA;YACAC,KAAA;UACA;UACAtB,GAAA,CAAAuB,cAAA,iBAAAzB,IAAA;;UAEA;UACA0B,UAAA;YACAxB,GAAA,CAAAyB,SAAA;cACAf,GAAA;YACA;UACA;QAEA;UACAV,GAAA,CAAAoB,SAAA;YACAC,IAAA;YACAC,KAAA,EAAAJ,GAAA,CAAAQ;UACA;QACA;MACA;IACA;IACAC,0BAAAC,CAAA;MAAA;MACA,IAAAC,KAAA;MACA,MAAAC,QAAA,GAAAF,CAAA,CAAAG,aAAA;MACA/B,GAAA,CAAAgC,UAAA;QACAtB,GAAA,EAAAmB,KAAA,CAAAI,QAAA;QAAA;QACAH,QAAA,EAAAA,QAAA;QACAI,IAAA;QAAA;QACAC,QAAAjB,GAAA;UAAA;UACAL,OAAA,CAAAC,GAAA,CAAAI,GAAA;UACA,IAAAR,GAAA,GAAAH,IAAA,CAAAC,KAAA,CAAAU,GAAA,CAAAtB,IAAA,UAAAA,IAAA;UACAiC,KAAA,CAAA/B,IAAA,CAAAD,MAAA,GAAAa,GAAA;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}